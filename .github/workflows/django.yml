name: Django CI test

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  test:

    runs-on: ubuntu-latest
    # strategy:
    #   max-parallel: 4
    #   matrix:
    #     python-version: [3.12]

    steps:
    - uses: actions/checkout@v4
    - name: Set up Python 
      id: setup-python
      uses: actions/setup-python@v5
      with:
        python-version: '3.12'
    - name: Install Poetry
    - uses: snok/install-poetry@v1
      with:
          virtualenvs-create: true
          virtualenvs-in-project: true
          virtualenvs-path: .venv
          installer-parallel: true
    #--------- load cached .venv if exists ---------
    - name: Load cached vennv
      id: cached-poetry-dependencies
      uses: actions/cache@v4
      with:
        path: .venv
        key: venv-${{ runner.os }}-${{ steps.setup-python.outputs.python-version }}-${{ hashFiles('**/poetry.lock') }}
    #------ install dependencies -----
    - name: install dependensies
      if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
      run: poetry install --no-interaction --no-root
    #---- install root project -------
    - name: install project
      run: | 
        source .venv/bin/activate
        pytest tests/
        coverage report
    

    
